{"version":3,"sources":["pivotalTrackerService.es6"],"names":[],"mappings":"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","file":"pivotalTrackerService.js","sourcesContent":["'use strict';\n\nangular.module('mean.pivotal-tracker').factory('PivotalTracker', ['$http','$q',\n  function($http,$q) {\n      return {\n          name: 'pivotal-tracker',\n          getEpics: (projectId) => {\n            let response = $q.defer();\n            $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectId}/epics`)\n                .success( (epics) => { response.resolve(epics)})\n                .error( (message) => { response.reject(message)})\n            return response.promise;\n          },\n\n          getAllStories : (projectID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/stories`,\n              {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (stories) => { response.resolve(stories)})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          },\n\n          getAllIterations : (projectID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/iterations`,\n                  {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (iterations) => {\n                      iterations = iterations.map(\n                              x => { x.start = (new Date(x.start)).toDateString();\n                              x.finish = (new Date(x.finish)).toDateString();\n                              return x;});\n                      response.resolve(iterations.filter(x => x.length>0))})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          },\n\n          getCurrentIterationStories : (projectID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/iterations`,\n                  {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (iterations) => {\n                      response.resolve(iterations[iterations.length-1].stories)})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          }\n\n\n      }\n  }\n]);\n\n"]}