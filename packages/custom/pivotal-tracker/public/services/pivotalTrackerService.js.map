{"version":3,"sources":["pivotalTrackerService.es6"],"names":[],"mappings":"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","file":"pivotalTrackerService.js","sourcesContent":["'use strict';\n\nangular.module('mean.pivotal-tracker').factory('PivotalTracker', ['$http','$q',\n  function($http,$q) {\n\n      let addMandaysCategoryToStories = (stories) =>{\n        return stories.map( (story) => {\n\n            for( let label of story.labels) {\n                if (label.name.includes('m:'))\n                    story.mandays = parseInt(label.name.substring(2));\n                if (label.name.includes('c:'))\n                    story.category = label.name.substring(2);\n                if (label.name.includes('i:'))\n                    story.nostro_id = label.name.substring(2);\n            }\n            return story;\n        })\n      }\n\n      let getCurrentIteration = (projectID) => {\n          let response = $q.defer();\n          $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/iterations`,\n              {\n                  headers: {\n                      'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                  }\n              })\n              .success( (iterations) => {\n                  let currentIteration = iterations[iterations.length-1];\n                  currentIteration.stories = addMandaysCategoryToStories(currentIteration.stories);\n                  response.resolve(currentIteration)})\n              .error( (message) => { response.reject(message)})\n          return response.promise;\n      }\n\n\n\n\n      return {\n          name: 'pivotal-tracker',\n          getEpics: (projectId) => {\n            let response = $q.defer();\n            $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectId}/epics`)\n                .success( (epics) => { response.resolve(epics)})\n                .error( (message) => { response.reject(message)})\n            return response.promise;\n          },\n\n          getAllStories : (projectID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/stories`,\n              {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (stories) => { response.resolve(addMandaysCategoryToStories(stories))})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          },\n\n          getAllIterations : (projectID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/iterations`,\n                  {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (iterations) => {\n                      iterations = iterations.map(\n                              x => { x.start = (new Date(x.start)).toDateString();\n                              x.finish = (new Date(x.finish)).toDateString();\n                              return x;});\n                      response.resolve(iterations.filter(x => x.length>0))})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          },\n          getCurrentIteration : getCurrentIteration\n          ,\n\n          getStoryTasks: (projectID,storyID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/stories/${storyID}/tasks`,\n                  {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (tasks) => {\n                      response.resolve(tasks)})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          },\n\n          getCurrentIterationUserAssignedStories: (projectID,userID) => {\n              let response = $q.defer();\n              getCurrentIteration(projectID).then( (iteration) => {\n                  response.resolve(iteration.stories.filter( x => (x.owner_ids.indexOf(userID) != -1)))\n              })\n              return response.promise;\n          },\n\n           getRemainingMandays : (demoDay,persons) => {\n\n              // Orario corrente\n              let now = new Date();\n\n              // Giorni effettive dalla scadenza\n              let effectiveDaysRemaining = (Math.floor((demoDay - now) / (1000*60*60*24))) +1;\n\n              let mandaysRemaining = effectiveDaysRemaining;\n\n              let saturdayOrSunday = ([0,6].indexOf(now.getDay())) != -1;\n\n              if(effectiveDaysRemaining>3)\n                  if(saturdayOrSunday)\n                      mandaysRemaining = 3;\n                  else\n                      mandaysRemaining -= 2;\n\n              if(now.getHours() > 14 && !saturdayOrSunday)\n                  mandaysRemaining -= 0.5;\n\n              return mandaysRemaining * persons;\n\n          }\n\n\n\n\n\n      }\n  }\n]);\n\n"]}