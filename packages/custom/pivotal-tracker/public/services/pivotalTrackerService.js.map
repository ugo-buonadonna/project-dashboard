{"version":3,"sources":["pivotalTrackerService.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAC,IAAI,EAC5E,UAAS,KAAK,EAAC,EAAE,EAAE;AACf,WAAO;AACH,YAAI,EAAE,iBAAiB;AACvB,gBAAQ,EAAE,kBAAC,SAAS,EAAK;AACvB,gBAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,iBAAK,CAAC,GAAG,0DAAwD,SAAS,YAAS,CAC9E,OAAO,CAAE,UAAC,KAAK,EAAK;AAAE,wBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aAAC,CAAC,CAC/C,KAAK,CAAE,UAAC,OAAO,EAAK;AAAE,wBAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;aAAC,CAAC,CAAA;AACrD,mBAAO,QAAQ,CAAC,OAAO,CAAC;SACzB;;AAED,kBAAU,EAAG,oBAAC,SAAS,EAAC,MAAM,EAAK;AAC/B,gBAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,iBAAK,CAAC,GAAG,0DAAwD,SAAS,eAC1E;AACQ,uBAAO,EAAE;AACL,oCAAgB,EAAE,kCAAkC;iBACvD;aACJ,CAAC,CACD,OAAO,CAAE,UAAC,KAAK,EAAK;AAAE,wBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aAAC,CAAC,CAC/C,KAAK,CAAE,UAAC,OAAO,EAAK;AAAE,wBAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;aAAC,CAAC,CAAA;AACrD,mBAAO,QAAQ,CAAC,OAAO,CAAC;SAC3B;;KAGJ,CAAA;CACJ,CACF,CAAC,CAAC","file":"pivotalTrackerService.js","sourcesContent":["'use strict';\n\nangular.module('mean.pivotal-tracker').factory('PivotalTracker', ['$http','$q',\n  function($http,$q) {\n      return {\n          name: 'pivotal-tracker',\n          getEpics: (projectId) => {\n            let response = $q.defer();\n            $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectId}/epics`)\n                .success( (epics) => { response.resolve(epics)})\n                .error( (message) => { response.reject(message)})\n            return response.promise;\n          },\n\n          getStories : (projectID,epicID) => {\n              let response = $q.defer();\n              $http.get(`https://www.pivotaltracker.com/services/v5/projects/${projectID}/stories`,\n              {\n                      headers: {\n                          'X-TrackerToken': '222069cee93cc9a8651bb4bcccc2c5d7'\n                      }\n                  })\n                  .success( (epics) => { response.resolve(epics)})\n                  .error( (message) => { response.reject(message)})\n              return response.promise;\n          }\n\n\n      }\n  }\n]);\n\n"]}